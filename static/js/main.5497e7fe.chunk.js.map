{"version":3,"sources":["Components/Book.js","App.js","reportWebVitals.js","index.js"],"names":["Book","useState","book","setBook","booklist","setbooklist","type","name","value","onChange","e","target","onClick","preventDefault","booklists","id","Math","floor","random","edititem","className","map","books","filter","t","filteritem","selecteditem","find","console","log","Edittask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAmEeA,MA9Dd,WACI,MAAoBC,qBAApB,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAA6BF,mBAAS,IAAtC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,oBAAS,GAArC,mBAoCD,OApCC,UAoCO,gCAEJ,gCAAK,uBAAOK,KAAK,OAAOC,KAAK,OAAOC,MAAON,EAAMO,SArCnC,SAACC,GACdP,EAAQO,EAAEC,OAAOH,UAqClB,wBAAQI,QAnCQ,SAACF,GAEhB,GADAA,EAAEG,iBACQ,KAAPX,EAAU,CACT,IAAMY,EAAU,CACZC,GAAGC,KAAKC,MAAoB,IAAdD,KAAKE,UACnBV,MAAMN,EACNiB,UAAS,GAGbd,EAAY,GAAD,mBAAKD,GAAL,CAAcU,OA0B9B,yBAEA,8BACCV,IAAW,GACT,oBAAIgB,UAAU,OAAd,SAAsBhB,EAASiB,KAAI,SAAAC,GAAK,OAAE,+BAAoBA,EAAMd,MACpE,wBAAQI,QAAS,SAAAF,GAAC,OA1BJK,EA0BmBO,EAAMP,QAzBzCV,EAAYD,EAASmB,QAAO,SAACC,GAAD,OAAKA,EAAET,KAAKA,MAD3B,IAAGA,GA0Bd,yBACA,wBAAQH,QAAS,SAAAF,GAAC,OAxBT,SAACA,EAAEK,GACf,IAAMU,EAAWrB,EAASmB,QAAO,SAACC,GAAD,OAAKA,EAAET,KAAKA,KACvCW,EAAatB,EAASuB,MAAK,SAACH,GAAD,OAAKA,EAAET,KAAKA,KAC7Ca,QAAQC,IAAIH,GAETrB,EAAY,CAACD,SAASqB,EACzBjB,MAAMiB,EAAWjB,MACrBO,GAAGA,IAiBwBe,CAASpB,EAAEY,EAAMP,KAArC,2BAFmDO,EAAMP,SAOxD,WC3CGgB,MATf,WACE,OACE,qBAAKX,UAAU,MAAf,SAEE,cAAC,EAAD,OCESY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5497e7fe.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nimport './book.css'\r\n\r\n\r\n function Book() {\r\n     const[book,setBook]=useState()\r\n     const [booklist,setbooklist]=useState([])\r\n     const[edititem,setedititem]=useState(false)\r\n     const HandleBook=(e)=>{\r\n         setBook(e.target.value)\r\n     }\r\n     const HandleSubmit=(e)=>{\r\n         e.preventDefault()\r\n         if(book!==\"\"){\r\n             const booklists={\r\n                 id:Math.floor(Math.random()*1000),\r\n                 value:book,\r\n                 edititem:false\r\n                 \r\n             }\r\n             setbooklist([...booklist,booklists])\r\n\r\n         }\r\n         \r\n     }\r\n     const Deletetask=(e,id)=>{\r\n         setbooklist(booklist.filter((t)=>t.id!==id))\r\n     }\r\n     const Edittask=(e,id)=>{\r\n        const filteritem=booklist.filter((t)=>t.id!==id)\r\n        const selecteditem=booklist.find((t)=>t.id===id)\r\n        console.log(selecteditem)\r\n            \r\n           setbooklist({booklist:filteritem,\r\n        value:filteritem.value,\r\n    id:id})\r\n            \r\n        }\r\n        \r\n        \r\n            \r\n        \r\n  \r\n    return (<div>\r\n       \r\n        <div><input type=\"text\" name=\"book\" value={book} onChange={HandleBook}/>\r\n        <button onClick={HandleSubmit}>Add Book</button>\r\n        </div>\r\n        <div>\r\n        {booklist!==[]?\r\n           <ul className=\"book\">{booklist.map(books=><li key={books.id}>{books.value}\r\n           <button onClick={e=>Deletetask(e,books.id)}>Delete Book</button>\r\n           <button onClick={e=>Edittask(e,books.id)}>Update Book</button>\r\n           \r\n           </li>)}\r\n           </ul>  \r\n           \r\n           :null}      \r\n        \r\n        </div>\r\n\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Book\r\n","\nimport './App.css';\nimport Book from './Components/Book';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Book/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}